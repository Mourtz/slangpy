# -----------------------------------------------------------------------------
# Rule templates
# -----------------------------------------------------------------------------

# Rule to trigger on merge requests and updates to default branch
.default-rules:
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
    - if: $CI_PIPELINE_SOURCE == 'schedule'

# -----------------------------------------------------------------------------
# Job templates
# -----------------------------------------------------------------------------

# Windows (initializes conda environment then runs ci.py script)
.windows-base:
  stage: build
  tags:
    - windows
    - gpu
  variables:
    CONDA_PATH: C:\Users\NvrGfxTest\FalcorMiniconda
    CONDA_ENV: falcor2
  script:
    # Setup conda environment
    - Set-ExecutionPolicy -Scope Process -ExecutionPolicy Bypass -Force
    - |
      & $CONDA_PATH\shell\condabin\conda-hook.ps1
    - conda activate $CONDA_ENV

    # Run CI script
    - python -u .build_agent/ci.py

 #Linux (initializes conda environment then runs ci.py script)
.linux-base:
  stage: build
  tags:
    - linux
    - gpu
    - nvrgfx-rtx04
  variables:
    CONDA_PATH: /home/gitlab-runner/FalcorMiniconda
    CONDA_ENV: falcor2
  script:
    # Setup conda environment
    - source ${CONDA_PATH}/bin/activate
    - conda activate ${CONDA_ENV}
    # Run CI script
    - python -u .build_agent/ci.py

# Add standard unit test variables
.unit-test:
  variables:
    RUN_UNIT_TESTS: true
    RUN_PYTHON_TESTS: true
  artifacts:
    paths:
      - "junit-*.xml"
    reports:
      junit:
        - "junit-*.xml"


# -----------------------------------------------------------------------------
# Standard build job
# -----------------------------------------------------------------------------

windows:
  extends:
    - .default-rules
    - .windows-base
    - .unit-test

#linux:
#  extends:
#    - .default-rules
#    - .linux-base
#    - .unit-test
